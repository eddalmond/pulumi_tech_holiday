[tool.poetry]
name = "pulumi-tech-holiday"
version = "0.1.0"
description = "Pulumi Tech Holiday Project"
authors = ["eddalmond"]
readme = "README.md"
package-mode = false

[tool.poetry.dependencies]
python = "^3.13"
pulumi = "^3.201.0"
pulumi-aws = "^7.8.0"


[tool.poetry.group.dev.dependencies]
pytest = "^8.4.2"
ruff = "^0.14.0"
black = "^25.9.0"
isort = "^6.1.0"
mypy = "^1.18.2"
bandit = "^1.8.6"
safety = "^3.6.2"
pytest-cov = "^7.0.0"
pytest-html = "^4.1.1"
pytest-xdist = "^3.8.0"
pulumi-policy = "^1.18.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false       # Gradually enable this
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = false # Pulumi decorators often untyped
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

# Pulumi specific settings
ignore_missing_imports = true

# Ignore certain modules that commonly have import issues
[[tool.mypy.overrides]]
module = ["pulumi.*", "pulumi_aws.*", "boto3.*", "botocore.*"]
ignore_missing_imports = true

[tool.black]
line-length = 88
target-version = ['py313']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
known_third_party = ["pulumi", "pulumi_aws", "boto3", "pytest"]
known_first_party = ["infrastructure", "src", "tests"]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
  "unit: marks tests as unit tests",
  "integration: marks tests as integration tests",
  "slow: marks tests as slow (deselect with '-m \"not slow\"')",
]

[tool.coverage.run]
source = ["infrastructure", "src"]
omit = ["*/tests/*", "*/__pycache__/*", "*/venv/*", "*/.venv/*"]

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "def __repr__",
  "if self.debug:",
  "if settings.DEBUG",
  "raise AssertionError",
  "raise NotImplementedError",
  "if 0:",
  "if __name__ == \"__main__\":",
  "class .*\\bProtocol\\):",
  "@\\(abc\\.\\)?abstractmethod",
]

[tool.bandit]
exclude_dirs = ["tests", ".venv", "venv"]
skips = ["B101"]                          # Skip assert_used test

[tool.bandit.assert_used]
skips = ["*_test.py", "test_*.py"]
